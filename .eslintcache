[{"/Users/kennethchow/Documents/Projects/TimeBudget/src/index.js":"1","/Users/kennethchow/Documents/Projects/TimeBudget/src/App.js":"2","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/BudgetPage/BudgetPage.js":"3","/Users/kennethchow/Documents/Projects/TimeBudget/src/data/data.js":"4","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/AddTimeButton/AddTimeButton.js":"5","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/Sections/Sections.js":"6","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/SideNavbar/SideNavbar.js":"7","/Users/kennethchow/Documents/Projects/TimeBudget/src/utils/api.js":"8"},{"size":220,"mtime":1607911689772,"results":"9","hashOfConfig":"10"},{"size":348,"mtime":1616284352383,"results":"11","hashOfConfig":"10"},{"size":2148,"mtime":1616725880016,"results":"12","hashOfConfig":"10"},{"size":515,"mtime":1608178207634,"results":"13","hashOfConfig":"10"},{"size":263,"mtime":1609262734146,"results":"14","hashOfConfig":"10"},{"size":5953,"mtime":1616349456928,"results":"15","hashOfConfig":"10"},{"size":2445,"mtime":1616286223876,"results":"16","hashOfConfig":"10"},{"size":131,"mtime":1616725842417,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"utgqc8",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kennethchow/Documents/Projects/TimeBudget/src/index.js",[],["37","38"],"/Users/kennethchow/Documents/Projects/TimeBudget/src/App.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/BudgetPage/BudgetPage.js",["39","40"],"/Users/kennethchow/Documents/Projects/TimeBudget/src/data/data.js",[],["41","42"],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/AddTimeButton/AddTimeButton.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/Sections/Sections.js",["43"],"import \"./Sections.css\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport React from \"react\";\nimport { Component } from \"react\";\n\nclass Sections extends Component {\n   constructor(props) {\n      super(props);\n      console.log(\"hi\");\n\n      this.state = { budgets: [], isEditMode: false };\n   }\n\n   componentWillReceiveProps(newProps) {\n      if (this.state.budgets !== newProps.budgets) {\n         this.setState({ budgets: newProps.budgets });\n      }\n   }\n\n   addItem = (index, budgetItems) => {\n      budgetItems.push({\n         item_name: \"TESTING\",\n         time_budgeted: 56,\n         time_spent: 3,\n      });\n      const budgets = this.state.budgets;\n      budgets[index][\"items\"] = budgetItems;\n      this.setState({ budgets: budgets });\n   };\n\n   onGroupRename = (index, budget) => {\n      console.log(this);\n      console.log(budget.group_name);\n   };\n\n   switchToEditMode = () => {\n      this.setState({ isEditMode: true });\n   };\n\n   save = () => {\n      this.setState({ isEditMode: false });\n   };\n\n   renderEditButton() {\n      if (this.state.isEditMode) {\n         return (\n            <Button variant=\"primary\" size=\"sm\" onClick={this.save}>\n               Save\n            </Button>\n         )\n      }\n      return <EditIcon className=\"edit-icon-button\" color=\"primary\" onClick={this.switchToEditMode} />\n   }\n\n   render() {\n      const listBudgetGroups = this.state.budgets.map((budget, index) => (\n         <div className=\"budget-group\">\n            <div className=\"budget-group-header\">\n               <InputGroup className=\"budget-group-header-name budget-item-input-group\">\n                  <FormControl\n                     disabled={!this.state.isEditMode}\n                     className={\n                        this.state.isEditMode\n                           ? \"budget-item-form-control-enabled\"\n                           : \"budget-item-form-control-disabled\"\n                     }\n                     placeholder=\"Group Name\"\n                     aria-label=\"Small\"\n                     aria-describedby=\"inputGroup-sizing-sm\"\n                     defaultValue={budget.group_name}\n                  />\n               </InputGroup>\n\n               <span className=\"budget-group-header-column\">Budgeted</span>\n               <span className=\"budget-group-header-column\">Spent</span>\n            </div>\n            <ListItem\n               items={budget.items}\n               isEditMode={this.state.isEditMode}\n            ></ListItem>\n            {this.state.isEditMode && (\n               <div className=\"bottom-row\">\n                  <Button\n                     onClick={this.addItem.bind(this, index, budget.items)}\n                     variant=\"link\"\n                  >\n                     Add Item\n                  </Button>\n               </div>\n            )}\n            {!this.state.isEditMode && (\n               <div className=\"bottom-row\">\n                  <Button variant=\"link\">\n                     <br />\n                  </Button>\n               </div>\n            )}\n         </div>\n      ));\n      return (\n         <div>\n            <div className=\"edit-buttons-container\">\n               {this.renderEditButton()}\n            </div>\n            <div>{listBudgetGroups}</div>\n         </div>\n      );\n   }\n}\n\nfunction ListItem(props) {\n   const items = props.items;\n   let isEditMode = props.isEditMode;\n   const listBudgetItems = items.map((item) => (\n      <div className=\"budget-item-row\">\n         <div className=\"budget-item-row-content\">\n            <InputGroup\n               size=\"sm\"\n               className=\"mb-3 budget-group-header-name budget-item-input-group\"\n            >\n               <FormControl\n                  disabled={!isEditMode}\n                  className={\n                     isEditMode\n                        ? \"budget-item-form-control-enabled\"\n                        : \"budget-item-form-control-disabled\"\n                  }\n                  placeholder=\"Item Name\"\n                  aria-label=\"Small\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  defaultValue={item.item_name}\n               />\n            </InputGroup>\n            <InputGroup\n               size=\"sm\"\n               className=\"mb-3 budget-item-header-column budget-item-input-group\"\n            >\n               <FormControl\n                  disabled={!isEditMode}\n                  className={\n                     isEditMode\n                        ? \"budget-item-form-control-enabled\"\n                        : \"budget-item-form-control-disabled\"\n                  }\n                  placeholder=\"Hours Budgeted\"\n                  aria-label=\"Small\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  defaultValue={item.time_budgeted}\n               />\n            </InputGroup>\n            <InputGroup\n               size=\"sm\"\n               className=\"mb-3 budget-item-header-column budget-item-input-group\"\n            >\n               <FormControl\n                  disabled\n                  className=\"budget-item-form-control-disabled\"\n                  placeholder=\"Hours Spent\"\n                  aria-label=\"Small\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  defaultValue={item.time_spent}\n               />\n            </InputGroup>\n         </div>\n         <ProgressBar\n            className=\"budget-item-progress\"\n            now={calculatePercentDiff(item.time_budgeted, item.time_spent)}\n         />\n      </div>\n   ));\n   return <div>{listBudgetItems}</div>;\n}\n\nfunction calculatePercentDiff(max, current) {\n   const value = Math.abs(((max - current) / max) * 100 - 100);\n   return value;\n}\n\nexport default Sections;\n","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/SideNavbar/SideNavbar.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/utils/api.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":13},{"ruleId":"48","severity":1,"message":"52","line":6,"column":8,"nodeType":"50","messageId":"51","endLine":6,"endColumn":21},{"ruleId":"44","replacedBy":"53"},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","severity":1,"message":"55","line":7,"column":8,"nodeType":"50","messageId":"51","endLine":7,"endColumn":16},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'AddTimeButton' is defined but never used.",["56"],["57"],"'SaveIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]