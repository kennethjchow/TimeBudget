[{"/Users/kennethchow/Documents/Projects/TimeBudget/src/index.js":"1","/Users/kennethchow/Documents/Projects/TimeBudget/src/App.js":"2","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/BudgetPage/BudgetPage.js":"3","/Users/kennethchow/Documents/Projects/TimeBudget/src/data/data.js":"4","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/AddTimeButton/AddTimeButton.js":"5","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/Sections/Sections.js":"6","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/SideNavbar/SideNavbar.js":"7","/Users/kennethchow/Documents/Projects/TimeBudget/src/utils/api.js":"8","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/CalendarPage/CalendarPage.js":"9","/Users/kennethchow/Documents/Projects/TimeBudget/src/utils/Routes.js":"10","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/LoginPage/LoginPage.js":"11","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/Main/Main.js":"12","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/SignupPage/SignupPage.js":"13","/Users/kennethchow/Documents/Projects/TimeBudget/src/config.js":"14","/Users/kennethchow/Documents/Projects/TimeBudget/src/libs/contextLib.js":"15","/Users/kennethchow/Documents/Projects/TimeBudget/src/libs/hooksLib.js":"16","/Users/kennethchow/Documents/Projects/TimeBudget/src/libs/errorLib.js":"17","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/UnauthenticatedRoute.js":"18","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/AuthenticatedRoute.js":"19"},{"size":833,"mtime":1619374863241,"results":"20","hashOfConfig":"21"},{"size":1992,"mtime":1623288091935,"results":"22","hashOfConfig":"21"},{"size":2969,"mtime":1618076102938,"results":"23","hashOfConfig":"21"},{"size":515,"mtime":1608178207634,"results":"24","hashOfConfig":"21"},{"size":263,"mtime":1609262734146,"results":"25","hashOfConfig":"21"},{"size":7255,"mtime":1618076100602,"results":"26","hashOfConfig":"21"},{"size":2327,"mtime":1617474938171,"results":"27","hashOfConfig":"21"},{"size":131,"mtime":1616725842417,"results":"28","hashOfConfig":"21"},{"size":7471,"mtime":1618093769904,"results":"29","hashOfConfig":"21"},{"size":359,"mtime":1616983483798,"results":"30","hashOfConfig":"21"},{"size":1723,"mtime":1623287530342,"results":"31","hashOfConfig":"21"},{"size":762,"mtime":1623287664891,"results":"32","hashOfConfig":"21"},{"size":4264,"mtime":1619381939911,"results":"33","hashOfConfig":"21"},{"size":445,"mtime":1619373468796,"results":"34","hashOfConfig":"21"},{"size":168,"mtime":1619374217124,"results":"35","hashOfConfig":"21"},{"size":286,"mtime":1619381101970,"results":"36","hashOfConfig":"21"},{"size":199,"mtime":1619381927318,"results":"37","hashOfConfig":"21"},{"size":863,"mtime":1623287478446,"results":"38","hashOfConfig":"21"},{"size":508,"mtime":1623287011528,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"utgqc8",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kennethchow/Documents/Projects/TimeBudget/src/index.js",[],["85","86"],"/Users/kennethchow/Documents/Projects/TimeBudget/src/App.js",["87"],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/BudgetPage/BudgetPage.js",["88","89","90","91"],"import { useEffect, useState } from \"react\";\nimport Sections from \"../Sections/Sections\";\nimport moment from \"moment\";\nimport \"./BudgetPage.css\";\nimport AddTimeButton from \"../AddTimeButton/AddTimeButton\";\nimport API from \"../../utils/api\";\n\nimport _ from \"lodash\";\nfunction BudgetPage(props) {\n   const [budgets, setBudgets] = useState([]);\n   const [isLoading, setIsLoading] = useState(true);\n   const [hoursLeft, setHoursLeft] = useState(172);\n   const [isOpenTransaction, setIsOpenTransaction] = useState(false);\n\n   useEffect(() => {\n      let api_util = new API();\n      api_util.getBudgetCategories().then((res) => {\n         setBudgets(res.data);\n         setHoursLeft(calcTimeRemaining(res.data));\n\n         setIsLoading(false);\n      });\n   }, []);\n\n   const addItem = (index, budgetItems) => {\n      budgetItems.push({\n         item_id: 1000,\n         item_name: \"TESTING\",\n         time_budgeted: 56,\n         time_spent: 3,\n      });\n      const budgets_copy = [...budgets];\n      budgets_copy[index][\"items\"] = budgetItems;\n      setBudgets(budgets_copy);\n   };\n\n   const deleteItem = (item, group_id) => {\n      let budgets_copy = [...budgets];\n      let items = budgets_copy.find((x) => x.group_id === group_id).items;\n      _.remove(items, { item_id: item.item_id });\n      setBudgets(budgets_copy);\n   };\n\n   const deleteGroup = (group_id) => {\n      let budgets_copy = [...budgets];\n      _.remove(budgets_copy, { group_id: group_id });\n      setBudgets(budgets_copy);\n      // this.setState({ budgets: budgets });\n   };\n\n   const onGroupRename = (index, budget) => {\n      console.log(budget.group_name);\n   };\n\n   const calcTimeRemaining = (budgets) => {\n      let sum = 0;\n      budgets.forEach(function (budget, index) {\n         budget.items.forEach(function (item, index) {\n            sum += item.time_budgeted;\n         });\n      });\n      console.log(sum);\n      return 172 - sum;\n   };\n\n   // const timeLeft = calcTimeRemaining(); // TODO: Fix this so that it's bound to div\n\n   const startOfWeek = moment().startOf(\"isoweek\").format(\"MMMM Do\");\n   const endOfWeek = moment().endOf(\"isoweek\").format(\"MMMM Do\");\n   const year = moment().startOf(\"isoweek\").format(\"YYYY\");\n   return (\n      <div className=\"budget-page\">\n         {!isLoading && (\n            <div>\n               <div className=\"header\">\n                  <h5 className=\"headerYear\">{year}</h5>\n                  <h1 className=\"headerDate\">\n                     {startOfWeek} - {endOfWeek}\n                  </h1>\n                  <div>{hoursLeft} hours left to plan</div>\n               </div>\n               <div className=\"budgets\">\n                  <Sections\n                     budgets={budgets}\n                     onAddItem={addItem}\n                     onDeleteGroup={deleteGroup}\n                     onDeleteItem={deleteItem}\n                  ></Sections>\n               </div>\n            </div>\n         )}\n      </div>\n   );\n}\n\nexport default BudgetPage;\n","/Users/kennethchow/Documents/Projects/TimeBudget/src/data/data.js",[],["92","93"],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/AddTimeButton/AddTimeButton.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/Sections/Sections.js",["94","95","96","97","98"],"import \"./Sections.css\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport _ from \"lodash\";\nimport React, { useState } from \"react\";\nimport { Col, Container, Modal, Row } from \"react-bootstrap\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport { Link } from \"react-router-dom\";\n\nfunction Sections(props) {\n   const [isEditMode, setIsEditMode] = useState(false);\n   const [isOpenTransaction, setIsOpenTransaction] = useState(false);\n\n   const addItem = (index, budgetItems) => {\n      props.onAddItem(index, budgetItems);\n   };\n   const handleClose = () => setIsOpenTransaction(false);\n   const handleShow = () => setIsOpenTransaction(true);\n\n   const deleteGroup = (index, budgetItems) => {\n      props.onDeleteGroup(index, budgetItems);\n   };\n\n   const deleteItem = (index, budgetItems) => {\n      props.onDeleteItem(index, budgetItems);\n   };\n\n   const switchToEditMode = () => {\n      setIsEditMode(true);\n   };\n\n   const save = () => {\n      setIsEditMode(false);\n   };\n\n   const renderEditButton = () => {\n      if (isEditMode) {\n         return (\n            <Button variant=\"primary\" size=\"sm\" onClick={save}>\n               Save\n            </Button>\n         );\n      }\n      return (\n         <EditIcon\n            className=\"edit-icon-button\"\n            color=\"primary\"\n            onClick={switchToEditMode}\n         />\n      );\n   };\n\n   const listBudgetGroups = props.budgets.map((budget, index) => (\n      <Container className=\"budget-group\" fluid key={budget.group_id}>\n         <Row className=\"budget-group-header\" key={`header_${budget.group_id}`}>\n            <Col xs={5}>\n               <InputGroup className=\"budget-item-input-group\">\n                  <FormControl\n                     disabled={!isEditMode}\n                     className={\n                        isEditMode\n                           ? \"budget-item-form-control-enabled\"\n                           : \"budget-item-form-control-disabled\"\n                     }\n                     placeholder=\"Group Name\"\n                     aria-label=\"Small\"\n                     aria-describedby=\"inputGroup-sizing-sm\"\n                     defaultValue={budget.group_name}\n                  />\n               </InputGroup>\n            </Col>\n            <Col className=\"budget-group-header-column\">Budgeted</Col>\n            <Col className=\"budget-group-header-column has-delete\">\n               <div className=\"spent-header\">Spent</div>\n               {isEditMode && (\n                  <Link onClick={() => deleteGroup(budget.group_id)}>\n                     delete group\n                  </Link>\n               )}\n            </Col>\n         </Row>\n         <ListItem\n            items={budget.items}\n            group_id={budget.group_id}\n            isEditMode={isEditMode}\n            deleteItem={deleteItem}\n         ></ListItem>\n         <Row key={`bottom_${budget.group_id}`}>\n            {isEditMode && (\n               <div className=\"bottom-row\">\n                  <Button\n                     onClick={() => addItem(index, budget.items)}\n                     variant=\"link\"\n                  >\n                     Add Item\n                  </Button>\n               </div>\n            )}\n            {!isEditMode && (\n               <div className=\"bottom-row\">\n                  <Button variant=\"link\">\n                     <br />\n                  </Button>\n               </div>\n            )}\n         </Row>\n      </Container>\n   ));\n   return (\n      <div>\n         <div>\n            <div className=\"edit-buttons-container\">{renderEditButton()}</div>\n         </div>\n\n         <div>{listBudgetGroups}</div>\n      </div>\n   );\n}\n\nfunction AddTransactionModal(props) {\n   return (\n      <Modal show={props.show} onHide={props.handleClose}>\n         <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n         </Modal.Header>\n         <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n         <Modal.Footer>\n            <Button variant=\"secondary\" onClick={props.handleClose}>\n               Close\n            </Button>\n            <Button variant=\"primary\" onClick={props.handleClose}>\n               Save Changes\n            </Button>\n         </Modal.Footer>\n      </Modal>\n   );\n}\n\nfunction ListItem(props) {\n   const items = props.items;\n   const group_id = props.group_id;\n   let isEditMode = props.isEditMode;\n   const listBudgetItems = items.map((item) => (\n      <Row className=\"budget-item-row\" key={item.item_id}>\n         <Col xs={5}>\n            <InputGroup\n               size=\"sm\"\n               className=\"budget-group-header-name budget-item-input-group\"\n            >\n               <FormControl\n                  disabled={!isEditMode}\n                  className={\n                     isEditMode\n                        ? \"budget-item-form-control-enabled\"\n                        : \"budget-item-form-control-disabled\"\n                  }\n                  placeholder=\"Item Name\"\n                  aria-label=\"Small\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  defaultValue={item.item_name}\n               />\n            </InputGroup>\n         </Col>\n         <Col>\n            <InputGroup\n               size=\"sm\"\n               className=\"budget-item-header-column budget-item-input-group\"\n            >\n               <FormControl\n                  disabled={!isEditMode}\n                  className={\n                     isEditMode\n                        ? \"budget-item-form-control-enabled\"\n                        : \"budget-item-form-control-disabled\"\n                  }\n                  placeholder=\"Hours Budgeted\"\n                  aria-label=\"Small\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  defaultValue={item.time_budgeted}\n               />\n            </InputGroup>\n         </Col>\n         <Col className=\"has-delete\">\n            <InputGroup\n               size=\"sm\"\n               className=\"budget-item-header-column budget-item-input-group\"\n            >\n               <FormControl\n                  disabled\n                  className=\"budget-item-form-control-disabled\"\n                  placeholder=\"Hours Spent\"\n                  aria-label=\"Small\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  defaultValue={item.time_spent}\n               />\n            </InputGroup>\n            {isEditMode && (\n               <DeleteOutlineIcon\n                  className=\"delete-row-button\"\n                  color=\"primary\"\n                  onClick={() => props.deleteItem(item, group_id)}\n               ></DeleteOutlineIcon>\n            )}\n         </Col>\n         <ProgressBar\n            className=\"budget-item-progress\"\n            now={calculatePercentDiff(item.time_budgeted, item.time_spent)}\n         />\n      </Row>\n   ));\n   return <div>{listBudgetItems}</div>;\n}\n\nfunction calculatePercentDiff(max, current) {\n   const value = Math.abs(((max - current) / max) * 100 - 100);\n   return value;\n}\n\nexport default Sections;\n","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/SideNavbar/SideNavbar.js",["99","100","101","102"],"import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NavLink, useLocation, withRouter } from \"react-router-dom\";\nimport Routes from \"../../utils/Routes\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n   drawer: {\n      [theme.breakpoints.up(\"sm\")]: {\n         width: drawerWidth,\n         flexShrink: 0,\n      },\n   },\n   // necessary for content to be below app bar\n   toolbar: theme.mixins.toolbar,\n   drawerPaper: {\n      width: drawerWidth,\n   },\n   content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n   },\n}));\n\nfunction SideNavbar(props) {\n   const classes = useStyles();\n\n   const activeRoute = (routeName) => {\n      return props.location.pathname === routeName ? true : false;\n   };\n\n   const drawer = (\n      <div>\n         <div className={classes.toolbar} />\n         <Divider />\n         <List>\n            <NavLink to={\"/\"} key=\"Budget\">\n               <ListItem selected={activeRoute(\"/\")}>\n                  <ListItemText primary=\"Budget\" />\n               </ListItem>\n            </NavLink>\n            <NavLink to={\"/calendar\"} key=\"Calendar\">\n               <ListItem\n                  selected={activeRoute(\"/calendar\")}\n                  button\n                  key=\"Calendar\"\n               >\n                  <ListItemText primary=\"Calendar\" />\n               </ListItem>\n            </NavLink>\n         </List>\n         <Divider />\n      </div>\n   );\n\n   return (\n      <div>\n         <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            <Drawer\n               classes={{\n                  paper: classes.drawerPaper,\n               }}\n               variant=\"permanent\"\n               open\n            >\n               {drawer}\n            </Drawer>\n         </nav>\n      </div>\n   );\n}\n\nSideNavbar.propTypes = {\n   /**\n    * Injected by the documentation to work in an iframe.\n    * You won't need it on your project.\n    */\n   window: PropTypes.func,\n};\n\nexport default withRouter(SideNavbar);\n","/Users/kennethchow/Documents/Projects/TimeBudget/src/utils/api.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/CalendarPage/CalendarPage.js",["103","104"],"import React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n   MuiPickersUtilsProvider,\n   KeyboardTimePicker,\n   KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport \"./CalendarPage.css\";\nimport { Button, Modal } from \"react-bootstrap\"; // <-- JOY\nimport { InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\";\n\nexport default function CalendarPage(props) {\n   const [showModal, setShowModal] = useState(false);\n   const [selectedData, setSelectedData] = useState({});\n\n   const selected = (e) => {\n      setSelectedData(e);\n      setShowModal(true);\n   };\n   const callbackModal = () => {\n      setShowModal(false);\n   };\n   return (\n      <div className=\"calendar-container\">\n         <FullCalendar\n            height=\"100%\"\n            firstDay=\"1\"\n            plugins={[timeGridPlugin, interactionPlugin]}\n            initialView=\"timeGridWeek\"\n            selectable=\"true\"\n            select={selected}\n            allDaySlot={false}\n         />\n         <DateDialog\n            showModal={showModal}\n            callbackModal={callbackModal}\n            startDate={selectedData.start}\n            endDate={selectedData.end}\n         />\n      </div>\n   );\n}\n\nfunction DateDialog(props) {\n   const [startDate, setStartDate] = useState(null);\n   const [endDate, setEndDate] = useState(null);\n   const [showStartDate, setShowStartDate] = useState(false);\n   const [showEndDate, setShowEndDate] = useState(false);\n\n   useEffect(() => {\n      setStartDate(props.startDate);\n      setEndDate(props.endDate);\n   });\n\n   const handleClose = () => {\n      props.callbackModal();\n   };\n   const handleDateChange = (e) => {\n      console.log(startDate);\n      console.log(e);\n   };\n   const handleSelectChange = (e) => {\n      console.log(e);\n   };\n   const handleGroupChange = (e) => {\n      console.log(e)\n   }\n\n   return (\n      <Modal show={props.showModal} onHide={handleClose}>\n         <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n         </Modal.Header>\n         <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n         <Modal.Footer>\n            <form className=\"transaction-form\" noValidate autoComplete=\"off\">\n               <TextField\n                  className=\"modal-row\"\n                  margin=\"normal\"\n                  id=\"activity\"\n                  label=\"Activity\"\n                  InputLabelProps={{\n                     shrink: true,\n                  }}\n               />\n               <div className=\"modal-row\">\n                  <TextField\n                     margin=\"normal\"\n                     id=\"standard-number\"\n                     label=\"Hours Spent\"\n                     type=\"number\"\n                     InputLabelProps={{\n                        shrink: true,\n                     }}\n                  />\n               </div>\n               <div className=\"modal-row\">\n               <FormControl className=\"formControlSelect\" margin=\"normal\">\n                     <InputLabel id=\"demo-simple-select-label\">\n                        Category\n                     </InputLabel>\n                     <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"group-select\"\n                        // value={age}\n                        onChange={handleGroupChange}\n                     >\n                        {/* TODO: switch this to actual data later */}\n                        <MenuItem value={10}>Productivity</MenuItem>\n                        <MenuItem value={20}>Health</MenuItem>\n                        <MenuItem value={30}>Social</MenuItem>\n                     </Select>\n                  </FormControl>\n               </div>\n               <div className=\"modal-row\">\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                     <KeyboardDatePicker\n                        onClick={() => setShowStartDate(true)}\n                        onClose={() => setShowStartDate(false)}\n                        open={showStartDate}\n                        className=\"modal-date-picker\"\n                        disableToolbar\n                        autoOk={true}\n                        variant=\"inline\"\n                        format=\"EEEE MM/dd/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        label=\"Start Date\"\n                        value={startDate}\n                        onChange={handleDateChange}\n                        KeyboardButtonProps={{\n                           \"aria-label\": \"change date\",\n                        }}\n                     />\n                  </MuiPickersUtilsProvider>\n                  <FormControl className=\"formControlSelect\" margin=\"normal\">\n                     <InputLabel id=\"demo-simple-select-label\">\n                        Start Time\n                     </InputLabel>\n                     <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"start-date-select\"\n                        // value={age}\n                        onChange={handleSelectChange}\n                     >\n                        <MenuItem value={10}>Ten</MenuItem>\n                        <MenuItem value={20}>Twenty</MenuItem>\n                        <MenuItem value={30}>Thirty</MenuItem>\n                     </Select>\n                  </FormControl>\n               </div>\n               <div className=\"modal-row\">\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                     <KeyboardDatePicker\n                        onClick={() => setShowEndDate(true)}\n                        onClose={() => setShowEndDate(false)}\n                        open={showEndDate}\n                        autoOk={true}\n                        className=\"modal-date-picker\"\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"EEEE MM/dd/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        label=\"End Date\"\n                        value={endDate}\n                        onChange={handleDateChange}\n                        KeyboardButtonProps={{\n                           \"aria-label\": \"change date\",\n                        }}\n                     />\n                  </MuiPickersUtilsProvider>\n                  <FormControl className=\"formControlSelect\" margin=\"normal\">\n                     <InputLabel id=\"demo-simple-select-label\">\n                        End Time\n                     </InputLabel>\n                     <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"end-date-select\"\n                        // value={age}\n                        onChange={handleSelectChange}\n                     >\n                        <MenuItem value={10}>Ten</MenuItem>\n                        <MenuItem value={20}>Twenty</MenuItem>\n                        <MenuItem value={30}>Thirty</MenuItem>\n                     </Select>\n                  </FormControl>\n               </div>\n               <Button onClick={handleClose}>Save</Button>\n            </form>\n         </Modal.Footer>\n      </Modal>\n   );\n}\n","/Users/kennethchow/Documents/Projects/TimeBudget/src/utils/Routes.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/LoginPage/LoginPage.js",["105"],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/Main/Main.js",["106","107"],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/SignupPage/SignupPage.js",["108"],"import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./SignupPage.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAppContext } from \"../../libs/contextLib\";\nimport { useFormFields } from \"../../libs/hooksLib\";\nimport Auth from \"@aws-amplify/auth\";\nimport { onError } from \"../../libs/errorLib\";\n\nexport default function SignupPage() {\n   const [fields, handleFieldChange] = useFormFields({\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      confirmationCode: \"\",\n   });\n\n   const history = useHistory();\n   const [newUser, setNewUser] = useState(null);\n   const { userHasAuthenticated } = useAppContext();\n   const [isLoading, setIsLoading] = useState(false);\n\n   function validateForm() {\n      return (\n         fields.email.length > 0 &&\n         fields.password.length > 0 &&\n         fields.password === fields.confirmPassword\n      );\n   }\n\n   async function handleSubmit(event) {\n      event.preventDefault();\n\n      setIsLoading(true);\n\n      try {\n         const newUser = await Auth.signUp({\n            username: fields.email,\n            password: fields.password,\n         });\n         setIsLoading(false);\n         setNewUser(newUser);\n      } catch (e) {\n         onError(e);\n         setIsLoading(false);\n      }\n   }\n\n   async function handleConfirmationSubmit(event) {\n      event.preventDefault();\n\n      setIsLoading(true);\n\n      try {\n         await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n         await Auth.signIn(fields.email, fields.password);\n\n         userHasAuthenticated(true);\n         history.push(\"/\");\n      } catch (e) {\n         onError(e);\n         setIsLoading(false);\n      }\n   }\n\n   function validateConfirmationForm() {\n      return fields.confirmationCode.length > 0;\n   }\n\n   function renderConfirmationForm() {\n      return (\n         <Form onSubmit={handleConfirmationSubmit}>\n            <Form.Group controlId=\"confirmationCode\" size=\"lg\">\n               <Form.Label>Confirmation Code</Form.Label>\n               <Form.Control\n                  autoFocus\n                  type=\"tel\"\n                  onChange={handleFieldChange}\n                  value={fields.confirmationCode}\n               />\n               <Form.Text muted>\n                  Please check your email for the code.\n               </Form.Text>\n            </Form.Group>\n            <Button\n               block\n               size=\"lg\"\n               type=\"submit\"\n               variant=\"success\"\n               disabled={!validateConfirmationForm()}\n            >\n               Verify\n            </Button>\n         </Form>\n      );\n   }\n\n   function renderForm() {\n      return (\n         <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"email\" size=\"lg\">\n               <Form.Label>Email</Form.Label>\n               <Form.Control\n                  autoFocus\n                  type=\"email\"\n                  onChange={handleFieldChange}\n                  value={fields.email}\n               />\n            </Form.Group>\n            <Form.Group controlId=\"password\" size=\"lg\">\n               <Form.Label>Password</Form.Label>\n               <Form.Control\n                  type=\"password\"\n                  value={fields.password}\n                  onChange={handleFieldChange}\n               />\n            </Form.Group>\n            <Form.Group controlId=\"confirmPassword\" size=\"lg\">\n               <Form.Label>Confirm Password</Form.Label>\n               <Form.Control\n                  type=\"password\"\n                  onChange={handleFieldChange}\n                  value={fields.confirmPassword}\n               />\n            </Form.Group>\n            <Button\n               block\n               size=\"lg\"\n               type=\"submit\"\n               variant=\"success\"\n               disabled={!validateForm()}\n            >\n               Signup\n            </Button>\n            <div className=\"register-container\">\n               Already have an account? &nbsp;<Link to=\"/login\">Login</Link>\n            </div>\n         </Form>\n      );\n   }\n\n   return (\n      <div className=\"Signup\">\n         {newUser === null ? renderForm() : renderConfirmationForm()}\n      </div>\n   );\n}\n","/Users/kennethchow/Documents/Projects/TimeBudget/src/config.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/libs/contextLib.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/libs/hooksLib.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/libs/errorLib.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/UnauthenticatedRoute.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/AuthenticatedRoute.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":3,"column":35,"nodeType":"115","messageId":"116","endLine":3,"endColumn":40},{"ruleId":"113","severity":1,"message":"117","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":21},{"ruleId":"113","severity":1,"message":"118","line":13,"column":11,"nodeType":"115","messageId":"116","endLine":13,"endColumn":28},{"ruleId":"113","severity":1,"message":"119","line":13,"column":30,"nodeType":"115","messageId":"116","endLine":13,"endColumn":50},{"ruleId":"113","severity":1,"message":"120","line":51,"column":10,"nodeType":"115","messageId":"116","endLine":51,"endColumn":23},{"ruleId":"109","replacedBy":"121"},{"ruleId":"111","replacedBy":"122"},{"ruleId":"113","severity":1,"message":"123","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":9},{"ruleId":"113","severity":1,"message":"118","line":15,"column":11,"nodeType":"115","messageId":"116","endLine":15,"endColumn":28},{"ruleId":"113","severity":1,"message":"124","line":20,"column":10,"nodeType":"115","messageId":"116","endLine":20,"endColumn":21},{"ruleId":"113","severity":1,"message":"125","line":21,"column":10,"nodeType":"115","messageId":"116","endLine":21,"endColumn":20},{"ruleId":"113","severity":1,"message":"126","line":123,"column":10,"nodeType":"115","messageId":"116","endLine":123,"endColumn":29},{"ruleId":"113","severity":1,"message":"127","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"128","line":1,"column":28,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"129","line":9,"column":19,"nodeType":"115","messageId":"116","endLine":9,"endColumn":30},{"ruleId":"113","severity":1,"message":"130","line":10,"column":8,"nodeType":"115","messageId":"116","endLine":10,"endColumn":14},{"ruleId":"113","severity":1,"message":"131","line":9,"column":4,"nodeType":"115","messageId":"116","endLine":9,"endColumn":22},{"ruleId":"132","severity":1,"message":"133","line":55,"column":4,"nodeType":"115","endLine":55,"endColumn":13,"suggestions":"134"},{"ruleId":"113","severity":1,"message":"128","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":3,"column":35,"nodeType":"115","messageId":"116","endLine":3,"endColumn":40},{"ruleId":"113","severity":1,"message":"135","line":3,"column":42,"nodeType":"115","messageId":"116","endLine":3,"endColumn":48},{"ruleId":"113","severity":1,"message":"136","line":22,"column":11,"nodeType":"115","messageId":"116","endLine":22,"endColumn":20},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'AddTimeButton' is defined but never used.","'isOpenTransaction' is assigned a value but never used.","'setIsOpenTransaction' is assigned a value but never used.","'onGroupRename' is assigned a value but never used.",["137"],["138"],"'_' is defined but never used.","'handleClose' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'AddTransactionModal' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useLocation' is defined but never used.","'Routes' is defined but never used.","'KeyboardTimePicker' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setStartDate'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.startDate, props.endDate] as a second argument to the useEffect Hook.",["139"],"'Switch' is defined but never used.","'isLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Add dependencies array: [props.startDate, props.endDate]",{"range":"142","text":"143"},[1797,1797],", [props.startDate, props.endDate]"]