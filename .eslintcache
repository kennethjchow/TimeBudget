[{"/Users/kennethchow/Documents/Projects/TimeBudget/src/index.js":"1","/Users/kennethchow/Documents/Projects/TimeBudget/src/App.js":"2","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/BudgetPage/BudgetPage.js":"3","/Users/kennethchow/Documents/Projects/TimeBudget/src/data/data.js":"4","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/AddTimeButton/AddTimeButton.js":"5","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/Sections/Sections.js":"6","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/SideNavbar/SideNavbar.js":"7","/Users/kennethchow/Documents/Projects/TimeBudget/src/utils/api.js":"8","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/CalendarPage/CalendarPage.js":"9"},{"size":220,"mtime":1607911689772,"results":"10","hashOfConfig":"11"},{"size":742,"mtime":1616729161922,"results":"12","hashOfConfig":"11"},{"size":2148,"mtime":1616725880016,"results":"13","hashOfConfig":"11"},{"size":515,"mtime":1608178207634,"results":"14","hashOfConfig":"11"},{"size":263,"mtime":1609262734146,"results":"15","hashOfConfig":"11"},{"size":5953,"mtime":1616349456928,"results":"16","hashOfConfig":"11"},{"size":1953,"mtime":1616728583918,"results":"17","hashOfConfig":"11"},{"size":131,"mtime":1616725842417,"results":"18","hashOfConfig":"11"},{"size":320,"mtime":1616729173205,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"utgqc8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kennethchow/Documents/Projects/TimeBudget/src/index.js",[],["43","44"],"/Users/kennethchow/Documents/Projects/TimeBudget/src/App.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/BudgetPage/BudgetPage.js",["45","46"],"import { Component } from \"react\";\nimport Sections from \"../Sections/Sections\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"./BudgetPage.css\";\nimport AddTimeButton from \"../AddTimeButton/AddTimeButton\";\nimport API from \"../../utils/api\";\n\nclass BudgetPage extends Component {\n   constructor(props) {\n      super(props);\n\n      this.addTimeHandler = this.addTimeHandler.bind(this);\n   }\n\n   state = {\n      budgetCategories: [],\n      loaded: false,\n      hoursLeft: 172,\n   };\n\n   componentWillMount() {\n      if (!this.state.loaded && this.state.budgetCategories.length === 0) {\n         let api_util = new API()\n         api_util.getBudgetCategories().then((res)=>{\n            console.log('hi')\n            this.setState({ budgetCategories: res.data, loaded: true });\n         })\n      }\n   }\n\n   calcTimeRemaining() {\n      const budgets = this.state.budgetCategories;\n      let sum = 0;\n      budgets.forEach(function (budget, index) {\n         budget.items.forEach(function (item, index) {\n            sum += item.time_budgeted;\n         });\n      });\n      return 172 - sum;\n   }\n\n   addTimeHandler() {\n      let budgetCategoriesCopy = [...this.state.budgetCategories];\n      budgetCategoriesCopy[0].time_spent += 1;\n      this.setState({ budgetCategories: budgetCategoriesCopy });\n   }\n   render() {\n      const timeLeft = this.calcTimeRemaining(); // TODO: Fix this so that it's bound to div\n      const startOfWeek = moment().startOf(\"isoweek\").format(\"MMMM Do\");\n      const endOfWeek = moment().endOf(\"isoweek\").format(\"MMMM Do\");\n      const year = moment().startOf(\"isoweek\").format(\"YYYY\");\n      return (\n         <div className=\"budget-page\">\n            <div className=\"header\">\n               <h5 className=\"headerYear\">{year}</h5>\n               <h1 className=\"headerDate\">\n                  {startOfWeek} - {endOfWeek}\n               </h1>\n               <div>{timeLeft} hours left to plan</div>\n            </div>\n            <div className=\"budgets\">\n               <Sections budgets={this.state.budgetCategories}></Sections>\n            </div>\n         </div>\n      );\n   }\n}\n\nexport default BudgetPage;\n","/Users/kennethchow/Documents/Projects/TimeBudget/src/data/data.js",[],["47","48"],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/AddTimeButton/AddTimeButton.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/Sections/Sections.js",["49"],"import \"./Sections.css\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport React from \"react\";\nimport { Component } from \"react\";\n\nclass Sections extends Component {\n   constructor(props) {\n      super(props);\n      console.log(\"hi\");\n\n      this.state = { budgets: [], isEditMode: false };\n   }\n\n   componentWillReceiveProps(newProps) {\n      if (this.state.budgets !== newProps.budgets) {\n         this.setState({ budgets: newProps.budgets });\n      }\n   }\n\n   addItem = (index, budgetItems) => {\n      budgetItems.push({\n         item_name: \"TESTING\",\n         time_budgeted: 56,\n         time_spent: 3,\n      });\n      const budgets = this.state.budgets;\n      budgets[index][\"items\"] = budgetItems;\n      this.setState({ budgets: budgets });\n   };\n\n   onGroupRename = (index, budget) => {\n      console.log(this);\n      console.log(budget.group_name);\n   };\n\n   switchToEditMode = () => {\n      this.setState({ isEditMode: true });\n   };\n\n   save = () => {\n      this.setState({ isEditMode: false });\n   };\n\n   renderEditButton() {\n      if (this.state.isEditMode) {\n         return (\n            <Button variant=\"primary\" size=\"sm\" onClick={this.save}>\n               Save\n            </Button>\n         )\n      }\n      return <EditIcon className=\"edit-icon-button\" color=\"primary\" onClick={this.switchToEditMode} />\n   }\n\n   render() {\n      const listBudgetGroups = this.state.budgets.map((budget, index) => (\n         <div className=\"budget-group\">\n            <div className=\"budget-group-header\">\n               <InputGroup className=\"budget-group-header-name budget-item-input-group\">\n                  <FormControl\n                     disabled={!this.state.isEditMode}\n                     className={\n                        this.state.isEditMode\n                           ? \"budget-item-form-control-enabled\"\n                           : \"budget-item-form-control-disabled\"\n                     }\n                     placeholder=\"Group Name\"\n                     aria-label=\"Small\"\n                     aria-describedby=\"inputGroup-sizing-sm\"\n                     defaultValue={budget.group_name}\n                  />\n               </InputGroup>\n\n               <span className=\"budget-group-header-column\">Budgeted</span>\n               <span className=\"budget-group-header-column\">Spent</span>\n            </div>\n            <ListItem\n               items={budget.items}\n               isEditMode={this.state.isEditMode}\n            ></ListItem>\n            {this.state.isEditMode && (\n               <div className=\"bottom-row\">\n                  <Button\n                     onClick={this.addItem.bind(this, index, budget.items)}\n                     variant=\"link\"\n                  >\n                     Add Item\n                  </Button>\n               </div>\n            )}\n            {!this.state.isEditMode && (\n               <div className=\"bottom-row\">\n                  <Button variant=\"link\">\n                     <br />\n                  </Button>\n               </div>\n            )}\n         </div>\n      ));\n      return (\n         <div>\n            <div className=\"edit-buttons-container\">\n               {this.renderEditButton()}\n            </div>\n            <div>{listBudgetGroups}</div>\n         </div>\n      );\n   }\n}\n\nfunction ListItem(props) {\n   const items = props.items;\n   let isEditMode = props.isEditMode;\n   const listBudgetItems = items.map((item) => (\n      <div className=\"budget-item-row\">\n         <div className=\"budget-item-row-content\">\n            <InputGroup\n               size=\"sm\"\n               className=\"mb-3 budget-group-header-name budget-item-input-group\"\n            >\n               <FormControl\n                  disabled={!isEditMode}\n                  className={\n                     isEditMode\n                        ? \"budget-item-form-control-enabled\"\n                        : \"budget-item-form-control-disabled\"\n                  }\n                  placeholder=\"Item Name\"\n                  aria-label=\"Small\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  defaultValue={item.item_name}\n               />\n            </InputGroup>\n            <InputGroup\n               size=\"sm\"\n               className=\"mb-3 budget-item-header-column budget-item-input-group\"\n            >\n               <FormControl\n                  disabled={!isEditMode}\n                  className={\n                     isEditMode\n                        ? \"budget-item-form-control-enabled\"\n                        : \"budget-item-form-control-disabled\"\n                  }\n                  placeholder=\"Hours Budgeted\"\n                  aria-label=\"Small\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  defaultValue={item.time_budgeted}\n               />\n            </InputGroup>\n            <InputGroup\n               size=\"sm\"\n               className=\"mb-3 budget-item-header-column budget-item-input-group\"\n            >\n               <FormControl\n                  disabled\n                  className=\"budget-item-form-control-disabled\"\n                  placeholder=\"Hours Spent\"\n                  aria-label=\"Small\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  defaultValue={item.time_spent}\n               />\n            </InputGroup>\n         </div>\n         <ProgressBar\n            className=\"budget-item-progress\"\n            now={calculatePercentDiff(item.time_budgeted, item.time_spent)}\n         />\n      </div>\n   ));\n   return <div>{listBudgetItems}</div>;\n}\n\nfunction calculatePercentDiff(max, current) {\n   const value = Math.abs(((max - current) / max) * 100 - 100);\n   return value;\n}\n\nexport default Sections;\n","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/SideNavbar/SideNavbar.js",["50","51","52"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n   drawer: {\n      [theme.breakpoints.up(\"sm\")]: {\n         width: drawerWidth,\n         flexShrink: 0,\n      },\n   },\n   // necessary for content to be below app bar\n   toolbar: theme.mixins.toolbar,\n   drawerPaper: {\n      width: drawerWidth,\n   },\n   content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n   },\n}));\n\nfunction SideNavbar(props) {\n   const classes = useStyles();\n\n   const drawer = (\n      <div>\n         <div className={classes.toolbar} />\n         <Divider />\n         <List>\n            <ListItem button key='Budget'>\n               <ListItemText primary='Budget' />\n            </ListItem>\n            <ListItem button key='Calendar'>\n               <ListItemText primary='Calendar' />\n            </ListItem>\n         </List>\n         <Divider />\n      </div>\n   );\n\n   return (\n      <div>\n         <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            <Drawer\n               classes={{\n                  paper: classes.drawerPaper,\n               }}\n               variant=\"permanent\"\n               open\n            >\n               {drawer}\n            </Drawer>\n         </nav>\n      </div>\n   );\n}\n\nSideNavbar.propTypes = {\n   /**\n    * Injected by the documentation to work in an iframe.\n    * You won't need it on your project.\n    */\n   window: PropTypes.func,\n};\n\nexport default SideNavbar;\n","/Users/kennethchow/Documents/Projects/TimeBudget/src/utils/api.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/CalendarPage/CalendarPage.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":13},{"ruleId":"57","severity":1,"message":"61","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":21},{"ruleId":"53","replacedBy":"62"},{"ruleId":"55","replacedBy":"63"},{"ruleId":"57","severity":1,"message":"64","line":7,"column":8,"nodeType":"59","messageId":"60","endLine":7,"endColumn":16},{"ruleId":"57","severity":1,"message":"65","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":17},{"ruleId":"57","severity":1,"message":"66","line":8,"column":8,"nodeType":"59","messageId":"60","endLine":8,"endColumn":20},{"ruleId":"57","severity":1,"message":"67","line":10,"column":8,"nodeType":"59","messageId":"60","endLine":10,"endColumn":16},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'AddTimeButton' is defined but never used.",["68"],["69"],"'SaveIcon' is defined but never used.","'InboxIcon' is defined but never used.","'ListItemIcon' is defined but never used.","'MailIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]