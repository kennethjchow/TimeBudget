[{"/Users/kennethchow/Documents/Projects/TimeBudget/src/index.js":"1","/Users/kennethchow/Documents/Projects/TimeBudget/src/App.js":"2","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/BudgetPage/BudgetPage.js":"3","/Users/kennethchow/Documents/Projects/TimeBudget/src/data/data.js":"4","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/AddTimeButton/AddTimeButton.js":"5","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/Sections/Sections.js":"6","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/SideNavbar/SideNavbar.js":"7","/Users/kennethchow/Documents/Projects/TimeBudget/src/utils/api.js":"8","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/CalendarPage/CalendarPage.js":"9","/Users/kennethchow/Documents/Projects/TimeBudget/src/utils/Routes.js":"10","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/LoginPage/LoginPage.js":"11","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/Main/Main.js":"12","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/SignupPage/SignupPage.js":"13"},{"size":220,"mtime":1607911689772,"results":"14","hashOfConfig":"15"},{"size":650,"mtime":1617486814339,"results":"16","hashOfConfig":"15"},{"size":2969,"mtime":1618076102938,"results":"17","hashOfConfig":"15"},{"size":515,"mtime":1608178207634,"results":"18","hashOfConfig":"15"},{"size":263,"mtime":1609262734146,"results":"19","hashOfConfig":"15"},{"size":7255,"mtime":1618076100602,"results":"20","hashOfConfig":"15"},{"size":2327,"mtime":1617474938171,"results":"21","hashOfConfig":"15"},{"size":131,"mtime":1616725842417,"results":"22","hashOfConfig":"15"},{"size":6503,"mtime":1618093422091,"results":"23","hashOfConfig":"15"},{"size":359,"mtime":1616983483798,"results":"24","hashOfConfig":"15"},{"size":1371,"mtime":1617487058582,"results":"25","hashOfConfig":"15"},{"size":665,"mtime":1617486157644,"results":"26","hashOfConfig":"15"},{"size":1724,"mtime":1617487300918,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"utgqc8",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"/Users/kennethchow/Documents/Projects/TimeBudget/src/index.js",[],["61","62"],"/Users/kennethchow/Documents/Projects/TimeBudget/src/App.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/BudgetPage/BudgetPage.js",["63","64","65","66"],"import { useEffect, useState } from \"react\";\nimport Sections from \"../Sections/Sections\";\nimport moment from \"moment\";\nimport \"./BudgetPage.css\";\nimport AddTimeButton from \"../AddTimeButton/AddTimeButton\";\nimport API from \"../../utils/api\";\n\nimport _ from \"lodash\";\nfunction BudgetPage(props) {\n   const [budgets, setBudgets] = useState([]);\n   const [isLoading, setIsLoading] = useState(true);\n   const [hoursLeft, setHoursLeft] = useState(172);\n   const [isOpenTransaction, setIsOpenTransaction] = useState(false);\n\n   useEffect(() => {\n      let api_util = new API();\n      api_util.getBudgetCategories().then((res) => {\n         setBudgets(res.data);\n         setHoursLeft(calcTimeRemaining(res.data));\n\n         setIsLoading(false);\n      });\n   }, []);\n\n   const addItem = (index, budgetItems) => {\n      budgetItems.push({\n         item_id: 1000,\n         item_name: \"TESTING\",\n         time_budgeted: 56,\n         time_spent: 3,\n      });\n      const budgets_copy = [...budgets];\n      budgets_copy[index][\"items\"] = budgetItems;\n      setBudgets(budgets_copy);\n   };\n\n   const deleteItem = (item, group_id) => {\n      let budgets_copy = [...budgets];\n      let items = budgets_copy.find((x) => x.group_id === group_id).items;\n      _.remove(items, { item_id: item.item_id });\n      setBudgets(budgets_copy);\n   };\n\n   const deleteGroup = (group_id) => {\n      let budgets_copy = [...budgets];\n      _.remove(budgets_copy, { group_id: group_id });\n      setBudgets(budgets_copy);\n      // this.setState({ budgets: budgets });\n   };\n\n   const onGroupRename = (index, budget) => {\n      console.log(budget.group_name);\n   };\n\n   const calcTimeRemaining = (budgets) => {\n      let sum = 0;\n      budgets.forEach(function (budget, index) {\n         budget.items.forEach(function (item, index) {\n            sum += item.time_budgeted;\n         });\n      });\n      console.log(sum);\n      return 172 - sum;\n   };\n\n   // const timeLeft = calcTimeRemaining(); // TODO: Fix this so that it's bound to div\n\n   const startOfWeek = moment().startOf(\"isoweek\").format(\"MMMM Do\");\n   const endOfWeek = moment().endOf(\"isoweek\").format(\"MMMM Do\");\n   const year = moment().startOf(\"isoweek\").format(\"YYYY\");\n   return (\n      <div className=\"budget-page\">\n         {!isLoading && (\n            <div>\n               <div className=\"header\">\n                  <h5 className=\"headerYear\">{year}</h5>\n                  <h1 className=\"headerDate\">\n                     {startOfWeek} - {endOfWeek}\n                  </h1>\n                  <div>{hoursLeft} hours left to plan</div>\n               </div>\n               <div className=\"budgets\">\n                  <Sections\n                     budgets={budgets}\n                     onAddItem={addItem}\n                     onDeleteGroup={deleteGroup}\n                     onDeleteItem={deleteItem}\n                  ></Sections>\n               </div>\n            </div>\n         )}\n      </div>\n   );\n}\n\nexport default BudgetPage;\n","/Users/kennethchow/Documents/Projects/TimeBudget/src/data/data.js",[],["67","68"],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/AddTimeButton/AddTimeButton.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/Sections/Sections.js",["69","70","71","72","73"],"import \"./Sections.css\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport _ from \"lodash\";\nimport React, { useState } from \"react\";\nimport { Col, Container, Modal, Row } from \"react-bootstrap\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport { Link } from \"react-router-dom\";\n\nfunction Sections(props) {\n   const [isEditMode, setIsEditMode] = useState(false);\n   const [isOpenTransaction, setIsOpenTransaction] = useState(false);\n\n   const addItem = (index, budgetItems) => {\n      props.onAddItem(index, budgetItems);\n   };\n   const handleClose = () => setIsOpenTransaction(false);\n   const handleShow = () => setIsOpenTransaction(true);\n\n   const deleteGroup = (index, budgetItems) => {\n      props.onDeleteGroup(index, budgetItems);\n   };\n\n   const deleteItem = (index, budgetItems) => {\n      props.onDeleteItem(index, budgetItems);\n   };\n\n   const switchToEditMode = () => {\n      setIsEditMode(true);\n   };\n\n   const save = () => {\n      setIsEditMode(false);\n   };\n\n   const renderEditButton = () => {\n      if (isEditMode) {\n         return (\n            <Button variant=\"primary\" size=\"sm\" onClick={save}>\n               Save\n            </Button>\n         );\n      }\n      return (\n         <EditIcon\n            className=\"edit-icon-button\"\n            color=\"primary\"\n            onClick={switchToEditMode}\n         />\n      );\n   };\n\n   const listBudgetGroups = props.budgets.map((budget, index) => (\n      <Container className=\"budget-group\" fluid key={budget.group_id}>\n         <Row className=\"budget-group-header\" key={`header_${budget.group_id}`}>\n            <Col xs={5}>\n               <InputGroup className=\"budget-item-input-group\">\n                  <FormControl\n                     disabled={!isEditMode}\n                     className={\n                        isEditMode\n                           ? \"budget-item-form-control-enabled\"\n                           : \"budget-item-form-control-disabled\"\n                     }\n                     placeholder=\"Group Name\"\n                     aria-label=\"Small\"\n                     aria-describedby=\"inputGroup-sizing-sm\"\n                     defaultValue={budget.group_name}\n                  />\n               </InputGroup>\n            </Col>\n            <Col className=\"budget-group-header-column\">Budgeted</Col>\n            <Col className=\"budget-group-header-column has-delete\">\n               <div className=\"spent-header\">Spent</div>\n               {isEditMode && (\n                  <Link onClick={() => deleteGroup(budget.group_id)}>\n                     delete group\n                  </Link>\n               )}\n            </Col>\n         </Row>\n         <ListItem\n            items={budget.items}\n            group_id={budget.group_id}\n            isEditMode={isEditMode}\n            deleteItem={deleteItem}\n         ></ListItem>\n         <Row key={`bottom_${budget.group_id}`}>\n            {isEditMode && (\n               <div className=\"bottom-row\">\n                  <Button\n                     onClick={() => addItem(index, budget.items)}\n                     variant=\"link\"\n                  >\n                     Add Item\n                  </Button>\n               </div>\n            )}\n            {!isEditMode && (\n               <div className=\"bottom-row\">\n                  <Button variant=\"link\">\n                     <br />\n                  </Button>\n               </div>\n            )}\n         </Row>\n      </Container>\n   ));\n   return (\n      <div>\n         <div>\n            <div className=\"edit-buttons-container\">{renderEditButton()}</div>\n         </div>\n\n         <div>{listBudgetGroups}</div>\n      </div>\n   );\n}\n\nfunction AddTransactionModal(props) {\n   return (\n      <Modal show={props.show} onHide={props.handleClose}>\n         <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n         </Modal.Header>\n         <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n         <Modal.Footer>\n            <Button variant=\"secondary\" onClick={props.handleClose}>\n               Close\n            </Button>\n            <Button variant=\"primary\" onClick={props.handleClose}>\n               Save Changes\n            </Button>\n         </Modal.Footer>\n      </Modal>\n   );\n}\n\nfunction ListItem(props) {\n   const items = props.items;\n   const group_id = props.group_id;\n   let isEditMode = props.isEditMode;\n   const listBudgetItems = items.map((item) => (\n      <Row className=\"budget-item-row\" key={item.item_id}>\n         <Col xs={5}>\n            <InputGroup\n               size=\"sm\"\n               className=\"budget-group-header-name budget-item-input-group\"\n            >\n               <FormControl\n                  disabled={!isEditMode}\n                  className={\n                     isEditMode\n                        ? \"budget-item-form-control-enabled\"\n                        : \"budget-item-form-control-disabled\"\n                  }\n                  placeholder=\"Item Name\"\n                  aria-label=\"Small\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  defaultValue={item.item_name}\n               />\n            </InputGroup>\n         </Col>\n         <Col>\n            <InputGroup\n               size=\"sm\"\n               className=\"budget-item-header-column budget-item-input-group\"\n            >\n               <FormControl\n                  disabled={!isEditMode}\n                  className={\n                     isEditMode\n                        ? \"budget-item-form-control-enabled\"\n                        : \"budget-item-form-control-disabled\"\n                  }\n                  placeholder=\"Hours Budgeted\"\n                  aria-label=\"Small\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  defaultValue={item.time_budgeted}\n               />\n            </InputGroup>\n         </Col>\n         <Col className=\"has-delete\">\n            <InputGroup\n               size=\"sm\"\n               className=\"budget-item-header-column budget-item-input-group\"\n            >\n               <FormControl\n                  disabled\n                  className=\"budget-item-form-control-disabled\"\n                  placeholder=\"Hours Spent\"\n                  aria-label=\"Small\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  defaultValue={item.time_spent}\n               />\n            </InputGroup>\n            {isEditMode && (\n               <DeleteOutlineIcon\n                  className=\"delete-row-button\"\n                  color=\"primary\"\n                  onClick={() => props.deleteItem(item, group_id)}\n               ></DeleteOutlineIcon>\n            )}\n         </Col>\n         <ProgressBar\n            className=\"budget-item-progress\"\n            now={calculatePercentDiff(item.time_budgeted, item.time_spent)}\n         />\n      </Row>\n   ));\n   return <div>{listBudgetItems}</div>;\n}\n\nfunction calculatePercentDiff(max, current) {\n   const value = Math.abs(((max - current) / max) * 100 - 100);\n   return value;\n}\n\nexport default Sections;\n","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/SideNavbar/SideNavbar.js",["74","75","76","77"],"import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NavLink, useLocation, withRouter } from \"react-router-dom\";\nimport Routes from \"../../utils/Routes\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n   drawer: {\n      [theme.breakpoints.up(\"sm\")]: {\n         width: drawerWidth,\n         flexShrink: 0,\n      },\n   },\n   // necessary for content to be below app bar\n   toolbar: theme.mixins.toolbar,\n   drawerPaper: {\n      width: drawerWidth,\n   },\n   content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n   },\n}));\n\nfunction SideNavbar(props) {\n   const classes = useStyles();\n\n   const activeRoute = (routeName) => {\n      return props.location.pathname === routeName ? true : false;\n   };\n\n   const drawer = (\n      <div>\n         <div className={classes.toolbar} />\n         <Divider />\n         <List>\n            <NavLink to={\"/\"} key=\"Budget\">\n               <ListItem selected={activeRoute(\"/\")}>\n                  <ListItemText primary=\"Budget\" />\n               </ListItem>\n            </NavLink>\n            <NavLink to={\"/calendar\"} key=\"Calendar\">\n               <ListItem\n                  selected={activeRoute(\"/calendar\")}\n                  button\n                  key=\"Calendar\"\n               >\n                  <ListItemText primary=\"Calendar\" />\n               </ListItem>\n            </NavLink>\n         </List>\n         <Divider />\n      </div>\n   );\n\n   return (\n      <div>\n         <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            <Drawer\n               classes={{\n                  paper: classes.drawerPaper,\n               }}\n               variant=\"permanent\"\n               open\n            >\n               {drawer}\n            </Drawer>\n         </nav>\n      </div>\n   );\n}\n\nSideNavbar.propTypes = {\n   /**\n    * Injected by the documentation to work in an iframe.\n    * You won't need it on your project.\n    */\n   window: PropTypes.func,\n};\n\nexport default withRouter(SideNavbar);\n","/Users/kennethchow/Documents/Projects/TimeBudget/src/utils/api.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/CalendarPage/CalendarPage.js",["78","79","80"],"/Users/kennethchow/Documents/Projects/TimeBudget/src/utils/Routes.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/LoginPage/LoginPage.js",[],"/Users/kennethchow/Documents/Projects/TimeBudget/src/components/Main/Main.js",["81"],"import \"./Main.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport BudgetPage from \"../BudgetPage/BudgetPage\";\nimport CalendarPage from \"../CalendarPage/CalendarPage\";\nimport SideNavbar from \"../SideNavbar/SideNavbar\";\n\nfunction Main() {\n   return (\n      <Router>\n         <div className=\"Main\">\n            <SideNavbar></SideNavbar>\n\n            <Route path=\"/\" exact component={BudgetPage} />\n            <Route path=\"/budget\" component={BudgetPage} />\n            <Route path=\"/calendar\" component={CalendarPage} />\n         </div>\n      </Router>\n   );\n}\n\nexport default Main;\n","/Users/kennethchow/Documents/Projects/TimeBudget/src/components/SignupPage/SignupPage.js",["82","83"],"import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./SignupPage.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function SignupPage() {\n   function renderConfirmationForm() {\n      return (\n         <Form>\n            <Form.Group controlId=\"confirmationCode\" size=\"lg\">\n               <Form.Label>Confirmation Code</Form.Label>\n               <Form.Control autoFocus type=\"tel\" />\n               <Form.Text muted>\n                  Please check your email for the code.\n               </Form.Text>\n            </Form.Group>\n            <Button block size=\"lg\" type=\"submit\" variant=\"success\">\n               Verify\n            </Button>\n         </Form>\n      );\n   }\n\n   function renderForm() {\n      return (\n         <Form>\n            <Form.Group controlId=\"email\" size=\"lg\">\n               <Form.Label>Email</Form.Label>\n               <Form.Control autoFocus type=\"email\" />\n            </Form.Group>\n            <Form.Group controlId=\"password\" size=\"lg\">\n               <Form.Label>Password</Form.Label>\n               <Form.Control type=\"password\" />\n            </Form.Group>\n            <Form.Group controlId=\"confirmPassword\" size=\"lg\">\n               <Form.Label>Confirm Password</Form.Label>\n               <Form.Control type=\"password\" />\n            </Form.Group>\n            <Button block size=\"lg\" type=\"submit\" variant=\"success\">\n               Signup\n            </Button>\n            <div className=\"register-container\">\n               Already have an account? &nbsp;<Link to=\"/login\">Login</Link>\n            </div>\n         </Form>\n      );\n   }\n\n   return <div className=\"Signup\">{renderForm()}</div>;\n}\n",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":21},{"ruleId":"88","severity":1,"message":"92","line":13,"column":11,"nodeType":"90","messageId":"91","endLine":13,"endColumn":28},{"ruleId":"88","severity":1,"message":"93","line":13,"column":30,"nodeType":"90","messageId":"91","endLine":13,"endColumn":50},{"ruleId":"88","severity":1,"message":"94","line":51,"column":10,"nodeType":"90","messageId":"91","endLine":51,"endColumn":23},{"ruleId":"84","replacedBy":"95"},{"ruleId":"86","replacedBy":"96"},{"ruleId":"88","severity":1,"message":"97","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":9},{"ruleId":"88","severity":1,"message":"92","line":15,"column":11,"nodeType":"90","messageId":"91","endLine":15,"endColumn":28},{"ruleId":"88","severity":1,"message":"98","line":20,"column":10,"nodeType":"90","messageId":"91","endLine":20,"endColumn":21},{"ruleId":"88","severity":1,"message":"99","line":21,"column":10,"nodeType":"90","messageId":"91","endLine":21,"endColumn":20},{"ruleId":"88","severity":1,"message":"100","line":123,"column":10,"nodeType":"90","messageId":"91","endLine":123,"endColumn":29},{"ruleId":"88","severity":1,"message":"101","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"102","line":1,"column":28,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"103","line":9,"column":19,"nodeType":"90","messageId":"91","endLine":9,"endColumn":30},{"ruleId":"88","severity":1,"message":"104","line":10,"column":8,"nodeType":"90","messageId":"91","endLine":10,"endColumn":14},{"ruleId":"88","severity":1,"message":"105","line":9,"column":4,"nodeType":"90","messageId":"91","endLine":9,"endColumn":22},{"ruleId":"88","severity":1,"message":"106","line":14,"column":10,"nodeType":"90","messageId":"91","endLine":14,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":55,"column":4,"nodeType":"90","endLine":55,"endColumn":13,"suggestions":"109"},{"ruleId":"88","severity":1,"message":"110","line":3,"column":42,"nodeType":"90","messageId":"91","endLine":3,"endColumn":48},{"ruleId":"88","severity":1,"message":"102","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"111","line":8,"column":13,"nodeType":"90","messageId":"91","endLine":8,"endColumn":35},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'AddTimeButton' is defined but never used.","Identifier","unusedVar","'isOpenTransaction' is assigned a value but never used.","'setIsOpenTransaction' is assigned a value but never used.","'onGroupRename' is assigned a value but never used.",["112"],["113"],"'_' is defined but never used.","'handleClose' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'AddTransactionModal' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useLocation' is defined but never used.","'Routes' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setStartDate'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.startDate] as a second argument to the useEffect Hook.",["114"],"'Switch' is defined but never used.","'renderConfirmationForm' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Add dependencies array: [props.startDate]",{"range":"117","text":"118"},[1799,1799],", [props.startDate]"]